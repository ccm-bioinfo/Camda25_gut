data_generos <- matriz_incidencia(nombres_generos , taxa_centrales_tomate , "V8")
colnames(data_generos) <- muestras_tomate
upset(data_generos)
interseccion_generos <- intersect(as.vector(taxa_centrales_tomate[[1]][,"V8"]) , as.vector(taxa_centrales_tomate[[2]][,"V8"]))
interseccion_generos <- intersect(interseccion_generos, as.vector(taxa_centrales_tomate[[3]][,"V8"]))
print(interseccion_generos)
data_tomate_desarrollo <- read.csv("../../data/tables/tomate_desarrollo.csv" , row.names = 1, header = TRUE )
medias <- c()
medianas <- c()
for (i in 1:dim(data_tomate_desarrollo)[2]){
medias <- c(medias , mean(data_tomate_desarrollo[ , i]))
medianas <- c(medianas , median(data_tomate_desarrollo[ , i]))
}
data_tomate_desarrollo <- data_tomate_desarrollo[ row.names(otus_centrales_tomate2[[1]]),]
data_tomate_desarrollo <- rbind(medias , data_tomate_desarrollo)
data_tomate_desarrollo <- rbind(medianas , data_tomate_desarrollo)
row.names(data_tomate_desarrollo) <- c("Medianas" , "Medias" , row.names(otus_centrales_tomate2[[1]]))
head(data_tomate_desarrollo)
data_tomate_no_desarrollo <- read.csv("../../data/tables/tomate_no_desarrollo.csv" , row.names = 1, header = TRUE )
medias <- c()
medianas <- c()
for (i in 1:dim(data_tomate_no_desarrollo)[2]){
medias <- c(medias , mean(data_tomate_no_desarrollo[ , i]))
medianas <- c(medianas , median(data_tomate_no_desarrollo[ , i]))
}
data_tomate_no_desarrollo <- data_tomate_no_desarrollo[ row.names(otus_centrales_tomate2[[2]]),]
data_tomate_no_desarrollo <- rbind(medias , data_tomate_no_desarrollo)
data_tomate_no_desarrollo <- rbind(medianas , data_tomate_no_desarrollo)
row.names(data_tomate_no_desarrollo) <- c("Medianas" , "Medias" , row.names(otus_centrales_tomate2[[2]]))
head(data_tomate_no_desarrollo)
otus_tomate_aleatorio1 <- list()
for (i in 1:10){
otus_tomate_aleatorio1[[i]] <- read.csv( paste0("../central_otus/otus_centrales_tomate_aleatorio1_" , as.character(i) , ".csv" ) , row.names = 1)
}
taxa_tomate_aleatorio1 <- list()
numero_otus <- c()
for (i in 1:10){
taxa_tomate_aleatorio1[[i]] <- rizosfera_bacterias[ intersect(row.names(rizosfera_bacterias), row.names(otus_tomate_aleatorio1[[i]])),]
x_i <-  length(row.names(otus_tomate_aleatorio1[[i]]))
print( paste0( "Se obtuvieron "  , as.character(x_i)  , " OTUs centrales en el submuestreo aleatorio " , as.character(i)  ) )
numero_otus <- c(numero_otus , x_i)
write.csv( taxa_tomate_aleatorio1[[i]] ,  paste0("taxonomy_keystone_otus_tomate_aleatorio_", as.character(i)  , ".csv"))
}
print(paste0("Su media fue ", as.character(mean(numero_otus))))
print(paste0("Su mediana fue ", as.character(median(numero_otus))))
taxa_tomate_aleatorio1[[11]] <- taxa_centrales_tomate[[3]]
nombres_familias <- lista_nombres(taxa_tomate_aleatorio1 , "V7")
data_familias <- matriz_incidencia(nombres_familias , taxa_tomate_aleatorio1 , "V7")
colnames(data_familias) <- c(1:10 , "totales")
upset(data_familias  , nsets = 11  )
familias_comunes <- c()
for (i in 1:106){
if (sum(data_familias[i,])>3) {
familias_comunes <- c(familias_comunes , i)} }
data_familias_comunes <- data_familias[ familias_comunes , ]
upset(data_familias_comunes , nsets = 11)
data_familias_comunes[ c("Acetobacteraceae","Pseudomonadaceae", "Burkholderiaceae" , "Corynebacteriaceae" , "Enterobacteriaceae") ,]
nombres_generos <- lista_nombres(taxa_tomate_aleatorio1 , "V8")
data_generos <- matriz_incidencia(nombres_generos , taxa_tomate_aleatorio1 , "V8")
colnames(data_generos) <- c(1:10 , "totales")
upset(data_generos  , nsets = 11  )
generos_comunes <- c()
for (i in 1:188){
if (sum(data_generos[i,])>3) {
generos_comunes <- c(generos_comunes , i)} }
data_generos_comunes <- data_generos[ generos_comunes , ]
upset(data_generos_comunes , nsets = 11)
data_generos_comunes[ c("Pseudomonas", "Burkholderia" , "Corynebacterium" , "Komagataeibacter") ,]
taxa_gen_comunes <- list()
for (i in 1:length(taxa_tomate_aleatorio1)){
index_gen_comunes <- c()
for (j in 1:(dim(taxa_tomate_aleatorio1[[i]])[1])) {
if (is.element(taxa_tomate_aleatorio1[[i]][j,"V8"], c("Pseudomonas", "Burkholderia" , "Corynebacterium" , "Komagataeibacter")  )){
index_gen_comunes <- c(index_gen_comunes , j)
}
}
taxa_gen_comunes[[i]] <- taxa_tomate_aleatorio1[[i]][ index_gen_comunes , ]
}
nombres_especies <- lista_nombres(taxa_gen_comunes , "V9")
data_especies <- matriz_incidencia(nombres_especies , taxa_gen_comunes , "V9")
colnames(data_especies) <- c(1:10 , "totales")
upset(data_especies  , nsets = 11  )
especies_comunes <- c()
for (i in 1:94){
if (sum(data_especies[i,])>3) {
especies_comunes <- c(especies_comunes , i)} }
data_especies_comunes <- data_especies[ especies_comunes , ]
upset(data_especies_comunes , nsets = 11)
data_especies_comunes
for (i in 1:10){
intersecion_i <- intersect(as.vector(taxa_tomate_aleatorio1[[i]][ , "V8"]) , as.vector(taxa_centrales_tomate[[3]][ , "V8"]  ) )
print(paste0( "A nivel gÃ©nero hubo " , as.character( length(intersecion_i)) , " coincidencias entre los otus encontrados con todas las muestras y con el submuestreo aleatorio ", as.character(i) ))
}
for (i in 1:10){
intersecion_i <- intersect(as.vector(taxa_tomate_aleatorio1[[i]][ , "V9"]) , as.vector(taxa_centrales_tomate[[3]][ , "V9"]  ) )
print(paste0( "A nivel especieÂ´ hubo " , as.character( length(intersecion_i)) , " coincidencias entre los otus encontrados con todas las muestras y con el submuestreo aleatorio ", as.character(i) ))
}
otus_tomate_aleatorio1 <- list()
for (i in 1:10){
otus_tomate_aleatorio1[[i]] <- read.csv( paste0("../central_otus/otus_centrales_tomate_aleatorio1_" , as.character(i) , ".csv" ) , row.names = 1)
}
taxa_tomate_aleatorio1 <- list()
numero_otus <- c()
for (i in 1:10){
taxa_tomate_aleatorio1[[i]] <- rizosfera_bacterias[ intersect(row.names(rizosfera_bacterias), row.names(otus_tomate_aleatorio1[[i]])),]
x_i <-  length(row.names(otus_tomate_aleatorio1[[i]]))
print( paste0( "Se obtuvieron "  , as.character(x_i)  , " OTUs centrales en el submuestreo aleatorio " , as.character(i)  ) )
numero_otus <- c(numero_otus , x_i)
write.csv( taxa_tomate_aleatorio1[[i]] ,  paste0("taxonomy_keystone_otus_tomate_aleatorio_", as.character(i)  , ".csv"))
}
print(paste0("Su media fue ", as.character(mean(numero_otus))))
print(paste0("Su mediana fue ", as.character(median(numero_otus))))
taxa_tomate_aleatorio1[[11]] <- taxa_centrales_tomate[[3]]
nombres_familias <- lista_nombres(taxa_tomate_aleatorio1 , "V7")
data_familias <- matriz_incidencia(nombres_familias , taxa_tomate_aleatorio1 , "V7")
colnames(data_familias) <- c(1:10 , "totales")
upset(data_familias  , nsets = 11  )
familias_comunes <- c()
for (i in 1:106){
if (sum(data_familias[i,])>3) {
familias_comunes <- c(familias_comunes , i)} }
data_familias_comunes <- data_familias[ familias_comunes , ]
upset(data_familias_comunes , nsets = 11)
familias_comunes <- c()
for (i in 1:106){
if (sum(data_familias[i,])>3) {
familias_comunes <- c(familias_comunes , i)} }
data_familias_comunes <- data_familias[ familias_comunes , ]
familias_comunes <- upset(data_familias_comunes , nsets = 11)
ggsave("familias_comunes.png" , familias_comunes , device = "png" )
familias_comunes <- c()
for (i in 1:106){
if (sum(data_familias[i,])>3) {
familias_comunes <- c(familias_comunes , i)} }
data_familias_comunes <- data_familias[ familias_comunes , ]
familias_comunes <- upset(data_familias_comunes , nsets = 11)
ggplot2::ggsave("familias_comunes.png" , familias_comunes , device = "png" )
type(familias_comunes)
typeof(familias_comunes)
familias_comunes <- c()
for (i in 1:106){
if (sum(data_familias[i,])>3) {
familias_comunes <- c(familias_comunes , i)} }
data_familias_comunes <- data_familias[ familias_comunes , ]
familias_comunes <- upset(data_familias_comunes , nsets = 11)
familias_comunes
#ggplot2::ggsave("familias_comunes.png" , familias_comunes , device = "png" )
typeof(familias_comunes)
paste0
paste0("a", "b", "c")
install.packages("svglite")
install.packages("svglite")
pak::pak("r-lib/svglite")
install.packages("pak")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!require(vegan)) install.packages('vegan')
library(vegan)
if (!require(igraph)) install.packages('igraph')
library(igraph)
if (!require(apcluster)) install.packages('apcluster')
library(apcluster)
if (!require(plyr)) install.packages('plyr')
library(plyr)
if (!require(stringr)) install.packages('stringr')
library(stringr)
if (!require(phyloseq)) install.packages('phyloseq')
library(phyloseq)
if (!require(UpSetR)) install.packages('UpSetR')
library(UpSetR)
muestras <- c("chile", "tomate" , "maiz")
rizosfera_chile <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_chile.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosfera_tomate <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_tomate.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosfera_maiz <- read.csv("../../data/taxonomy/linaje_bacterias_standarizado.de_maiz.csv" , header = FALSE , sep = ";" , row.names = 1)
rizosferas <- list( rizosfera_chile , rizosfera_tomate , rizosfera_maiz )
red_chile <- read.csv("../../data/networks/chile_species_raw_network.csv")
red_tomate <- read.csv("../../data/networks/tomate_species_raw_network.csv")
red_maiz <- read.csv("../../data/networks/maiz_species_raw_network.csv")
redes <- list(red_chile , red_tomate , red_maiz)
otus_centrales_chile <- read.csv("../central_otus/reporte_chile1.csv" , row.names = 1 )
otus_centrales_tomate <- read.csv("../central_otus/reporte_tomate1.csv" , row.names = 1 )
otus_centrales_maiz <- read.csv("../central_otus/reporte_maiz1.csv" , row.names = 1 )
otus_centrales <- list(otus_centrales_chile , otus_centrales_tomate , otus_centrales_maiz)
for (i in 1:3){
coln_i <- c()
for (j in 1:(dim(otus_centrales[[i]])[2]-4)) {
col_j <- make.names(colnames(otus_centrales[[i]])[j])
coln_i <- c(coln_i , substr(col_j  , 1 ,  nchar(col_j)-21))
}
colnames(otus_centrales[[i]]) <- c(coln_i , colnames(otus_centrales[[i]])[(length(colnames(otus_centrales[[i]]))-3):length(colnames(otus_centrales[[i]]))])
}
data_chile <- read.table("../../data/tables/table.from_chile.txt" , row.names = 1, header = TRUE , sep = "" )
data_tomate <- read.table("../../data/tables/table.from_tomate.txt" , row.names = 1, header = TRUE , sep = "" )
data_maiz <- read.table("../../data/tables/table.from_maiz.txt" , row.names = 1, header = TRUE , sep = "" )
data <- list( data_chile , data_tomate , data_maiz)
for (i in 1:3){
coln_i <- c()
for (j in 1:dim(data[[i]])[2]) {
col_j <- colnames(data[[i]])[j]
coln_i <- c(coln_i , substr(col_j  , 1 ,  nchar(col_j)-21))
}
colnames(data[[i]]) <- coln_i
}
for (i in 1:3){
print(paste0( "Para rizÃ³sfera de " , muestras[i] , " se consideraron OTUs de grado mayor o igual a " , as.character(min(otus_centrales[[i]]$degrees )) , ", cercanÃ­a mayor o igual a " , as.character(min(otus_centrales[[i]]$closeness )) , " e intermediaciÃ³n menor o igual a " , as.character(max(otus_centrales[[i]]$betweenness)) , "." ))
}
taxa_centrales <- list()
for (i in 1:3){
taxa_centrales[[i]] <- rizosferas[[i]][ intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ) ,]
print( paste0( "Se obtuvieron "  , length(intersect( row.names(otus_centrales[[i]]), row.names(rizosferas[[i]]) ))  , " OTUs (bacterias) centrales en las muestras de " , muestras[i] ) )
write.csv( taxa_centrales[[i]] ,  paste0("taxonomy_keystone_otus_", muestras[i] , ".csv"))
}
nombres_phyla <- c()
for (i in 1:3){
nombres_phyla <- union(nombres_phyla ,as.vector(taxa_centrales[[i]][, "V4"]))
}
print(nombres_phyla)
data_phyla <- matrix( nrow = length(nombres_phyla), ncol = length(muestras) )
for (i in 1:3){
for (j in 1:12) {
if (is.element(nombres_phyla[j], as.vector(taxa_centrales[[i]][, "V4"] ))){
data_phyla[j,i] <- 1
}else
{
data_phyla[j,i] <- 0
}
}
}
data_phyla <- data.frame(data_phyla , row.names = nombres_phyla )
colnames(data_phyla) <- c(  muestras)
upset(data_phyla    )
interseccion <- intersect(as.vector(taxa_centrales[[1]][ , "V4"]) , as.vector(taxa_centrales[[2]][ , "V4"]) )
interseccion <- intersect(interseccion , as.vector(taxa_centrales[[3]][ , "V4"]))
print(interseccion)
print(intersect(as.vector(taxa_centrales[[1]][, "V4"]) , as.vector(taxa_centrales[[2]][ , "V4"]) ))
nombres_familias <- c()
for (i in 1:3){
nombres_familias <- union(nombres_familias ,as.vector(taxa_centrales[[i]][, "V7"]))
}
print(nombres_familias)
data_familias <- matrix( nrow = length(nombres_familias), ncol = length(muestras) )
for (i in 1:3){
for (j in 1:38) {
if (is.element(nombres_familias[j], as.vector(taxa_centrales[[i]][, "V7"] ))){
data_familias[j,i] <- 1
}else
{
data_familias[j,i] <- 0
}
}
}
data_familias <- data.frame(data_familias , row.names = nombres_familias )
colnames(data_familias) <- c(  muestras)
upset(data_familias    )
interseccion <- intersect(as.vector(taxa_centrales[[1]][ , "V7"]) , as.vector(taxa_centrales[[2]][ , "V7"]) )
interseccion <- intersect(interseccion , as.vector(taxa_centrales[[3]][ , "V7"]))
print(interseccion)
nombres_generos <- c()
for (i in 1:3){
nombres_generos <- union(nombres_generos ,as.vector(taxa_centrales[[i]][, "V8"]))
}
print(nombres_generos)
data_generos <- matrix( nrow = length(nombres_generos), ncol = length(muestras) )
for (i in 1:3){
for (j in 1:47) {
if (is.element(nombres_generos[j], as.vector(taxa_centrales[[i]][, "V8"] ))){
data_generos[j,i] <- 1
}else
{
data_generos[j,i] <- 0
}
}
}
data_generos <- data.frame(data_generos , row.names = nombres_generos )
colnames(data_generos) <- c(  muestras)
upset(data_generos    )
print(intersect(as.vector(taxa_centrales[[1]][ , "V8"]) , as.vector(taxa_centrales[[2]][ , "V8"]) ))
pares <- list(c(1,2) , c(1,3) , c(2,3))
for (i in 1:3){
print(intersect(as.vector(taxa_centrales[[pares[[i]][1]]][ , "V9"]) , as.vector(taxa_centrales[[pares[[i]][2]]][ , "V9"]) ))
}
print(taxa_centrales[[1]][ , c("V8" , "V9" )])
taxa_virus_chile <- read.csv("../../data/taxonomy/linaje_virus.de_chile.csv" , header = FALSE , sep = ";" )
taxa_virus_chile_centrales <- taxa_virus_chile[ is.element(taxa_virus_chile[,"V1"]  , intersect(as.character(taxa_virus_chile[,"V1"]) , row.names(otus_centrales[[1]]))),]
print(taxa_virus_chile_centrales)
metadata_chile <- read.csv("../../data/metadata/fastp_metadat.csv" , colClasses = "character")
metadata_chile <- metadata_chile[ which(metadata_chile$Cultivo == "Chile") ,]
metadata_chile <- metadata_chile[ , c("ID" , "Etapa_fenologica" , "Origen")]
for (i in 1:dim(metadata_chile)[1]){
metadata_chile[i , "ID"] <- make.names(metadata_chile[i , "ID"])
}
metadata_chile <- metadata_chile[which(is.element(metadata_chile[ , "ID"], colnames(otus_centrales[[1]])) ) ,  ]
etapa <- data.frame( ID = metadata_chile[ , "ID"], Etapa =  metadata_chile [ , "Etapa_fenologica"] , Estado = metadata_chile[ , "Origen"],row.names = metadata_chile[ , "ID"])
etapa <- sample_data(etapa)
o_table_key_chile <- otu_table(otus_centrales[[1]][1:(dim(otus_centrales[[1]])[1]-1) , 1:(dim(otus_centrales[[1]])[2]-4) ] , taxa_are_rows = TRUE)
t_table_key_chile <- tax_table(taxa_centrales[[1]])
row.names(t_table_key_chile@.Data) <- row.names(taxa_centrales[[1]])
o_table_chile <- otu_table(data[[1]], taxa_are_rows = TRUE)
o_table_chile
phy_chile <- phyloseq(otu_table = o_table_chile , sample_data = etapa)
phy_chile <- transform_sample_counts(phy_chile , function(x) x / sum(x) )
meta_ord <- ordinate( phy_chile , method = "PCoA", distance = "bray")
plot_pcoa_muestras <- plot_ordination(physeq = phy_chile, ordination = meta_ord , color = "Etapa")
plot_pcoa_muestras
#ggsave("./chile_muestras_pcoa.png" , plot_pcoa_muestras , device = "png")
phy_chile@otu_table@.Data
v <- c(NA,0)
v
data <- read.csv("CD_vs_other_raw_network.csv" , header = TRUE )
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
getwd()
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
getwd()
getwd()
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
data <- data[ , 1:3]
head(data)
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
data <- data[ , 1:3]
unicos <- 956 - 1
filtro <- c()
for (i in 1:dim(data)[1]){
if ((data[i , "taxon1"] <= unicos | data[i , "taxon2"] <= unicos) & data[i, 3] > 0){
filtro <- c(filtro , i)
}
}
data <-data[filtro, ]
data
print(union(data[ , 1 ], data[ ,2]))
library(igraph)
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
data <- data[ , 1:3]
unicos <- 956 - 1
filtro <- c()
for (i in 1:dim(data)[1]){
if ((data[i , "taxon1"] <= unicos | data[i , "taxon2"] <= unicos) & data[i, 3] > 0){
filtro <- c(filtro , i)
}
}
data <-data[filtro, ]
data <-data[filtro, 1:2 ]
network <- graph_from_edgelist(as.matrix(data) , directed = FALSE)
plot(network)
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
data <- data[ , 1:3]
unicos <- 956 - 1
filtro <- c()
for (i in 1:dim(data)[1]){
if ((data[i , "taxon1"] <= unicos | data[i , "taxon2"] <= unicos) & data[i, 3] > 0){
filtro <- c(filtro , i)
}
}
data <-data[filtro, 1:2 ]
network <- graph_from_edgelist(as.matrix(data) , directed = FALSE)
V(network)$label <- NA
V(network)$size <- 3
plot(network)
dim(data)
library(igraph)
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
data <- data[ , 1:3]
unicos <- 956 - 1
filtro <- c()
for (i in 1:dim(data)[1]){
if ((data[i , "taxon1"] <= unicos | data[i , "taxon2"] <= unicos) & data[i, 3] > 0){
filtro <- c(filtro , i)
}
}
data <-data[filtro, 1:2 ]
network <- graph_from_edgelist(as.matrix(data) , directed = FALSE)
V(network)$label <- NA
V(network)$size <- 3
plot(network)
net_work <- graph_from_edgelist(as.matrix(data) , directed = FALSE)
V(net_work)$label <- NA
V(net_work)$size <- 3
plot(net_work)
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
data <- data[ , 1:3]
unicos <- 956 - 1
filtro <- c()
for (i in 1:dim(data)[1]){
if ((data[i , "taxon1"] <= unicos | data[i , "taxon2"] <= unicos) & data[i, 3] > 0){
filtro <- c(filtro , i)
}
}
data <-data[filtro, 1:2 ]
for (i in 1:dim(data)[1]){
for (j in 1:dim(data)[2]){
data[i,j] <- paste0("v_",as.character(data[i,j]))
}
}
net_work <- graph_from_edgelist(as.matrix(data) , directed = FALSE)
V(net_work)$label <- NA
V(net_work)$size <- 3
plot(net_work)
net_work <- graph_from_edgelist(as.matrix(data) , directed = FALSE)
#V(net_work)$label <- NA
V(net_work)$size <- 3
plot(net_work)
compo_conexas <- components(net_work)
size_compo_conexas <- compo_conexas$csize
princ <- which(size_compo_conexas == max(size_compo_conexas))
pertenencia <- compo_conexas$membership
compo_princ <- which(pertenencia == princ )
compo_princ <- names(compo_princ)
compo_princ
library(igraph)
data <- read.csv("networks/CD_vs_other_raw_network.csv" , header = TRUE )
data <- data[ , 1:3]
unicos <- 956 - 1
filtro <- c()
for (i in 1:dim(data)[1]){
if ((data[i , "taxon1"] <= unicos | data[i , "taxon2"] <= unicos) & data[i, 3] > 0){
filtro <- c(filtro , i)
}
}
data <-data[filtro, 1:2 ]
for (i in 1:dim(data)[1]){
for (j in 1:dim(data)[2]){
data[i,j] <- paste0("v_",as.character(data[i,j]))
}
}
net_work <- graph_from_edgelist(as.matrix(data) , directed = FALSE)
dim(data)
c <- "abcdefg"
substr(c , -2 , -1)
substr(c , nchar(c)-2 , nchar(c))
getwd()
setwd("ccm-bioinfo/Camda25_gut/scripts/")
dim(read.csv("Only HE FDR0.05_correlation.csv"))
HE <- read.csv("Only HE FDR0.05_correlation.csv")
CD <- read.csv("Only CD FDR0.05_correlation.csv")
UC <- read.csv("Only UC FDR0.05_correlation.csv")
UC <- read.csv("Only OB FDR0.05_correlation.csv")
UC <- read.csv("Only UC FDR0.05_correlation.csv")
OB <- read.csv("Only OB FDR0.05_correlation.csv")
HE
View(he)
View(HE)
for (i in c("CD" , "UC" , "OB")){View(i)}
View(CD)
View(UC)
View(OB)
setwd("../DataSets/")
data <- read.csv("ks_brack_test_centrality_measures.csv")
head(data)
sort(data$degrees)
max_deg <- sort(data$degrees)
hdeg <- which(data$degrees >= quantile(data$degrees , probs = seq(0, 1, 0.01))[100])
hdeg
data$degrees
print(row.names(data)[1:7])
print(data[1,1:7])
data <- read.csv("ks_brack_test_centrality_measures.csv" , row.names = 1)
print(row.names(data)[1:7])
hclose <- which(data$degrees >= quantile(data$closeness , probs = seq(0, 1, 0.01))[100])
print(row.names(data)[hclose])
hclose <- which(data$closeness >= quantile(data$closeness , probs = seq(0, 1, 0.01))[100])
print(row.names(data)[hclose])
print(row.names(data)[1:7])
hbet <- which(data$betweenness >= quantile(data$betweenness , probs = seq(0, 1, 0.01))[100])
print(row.names(data)[hbet])
data_1 <- read.csv("EVW_ks_brack_test_centrality_measures.csv" , row.names = 1)
dim(data_1)
hbet <- which(data_1$betweenness >= quantile(data_1$betweenness , probs = seq(0, 1, 0.01))[100])
hbet
hbet <- which(data_1$betweenness >= quantile(data_1$betweenness , probs = seq(0, 1, 0.1))[10])
print(row.names(data_1)[hbet])
hclose <- which(data_1$closeness >= quantile(data_1$closeness , probs = seq(0, 1, 0.1))[10])
print(row.names(data_1)[hclose])
hdeg <- which(data_1$degrees >= quantile(data_1$degrees , probs = seq(0, 1, 0.1))[10])
print(row.names(data_1)[hdeg])
library("phyloseq")
taxonomy <- import_biom("bracken_species.biom")
head(taxonomy@tax_table@.Data)
taxonomy <- taxonomy@tax_table@.Data
hclose <- which(data$degrees >= quantile(data$closeness , probs = seq(0, 1, 0.01))[100])
hclose <- which(data$closeness >= quantile(data$closeness , probs = seq(0, 1, 0.01))[100])
hdeg <- which(data$degrees >= quantile(data$degrees , probs = seq(0, 1, 0.01))[100])
hbet <- which(data$betweenness >= quantile(data$betweenness , probs = seq(0, 1, 0.01))[100])
hdeg <- row.names(data)[hdeg]
hclose <- row.names(data)[hclose]
hbet <- row.names(data)[hbet]
print(taxonomy[hdeg , c("Rank6" , "Rank7")])
print(taxonomy[hclose , c("Rank6" , "Rank7")])
print(taxonomy[hbet , c("Rank6" , "Rank7")])
hdeg <- which(data$degrees >= quantile(data$degrees , probs = seq(0, 1, 0.1))[10])
hclose <- which(data$closeness >= quantile(data$closeness , probs = seq(0, 1, 0.1))[10])
hdeg <- row.names(data)[hdeg]
hclose <- row.names(data)[hclose]
intersect(hdeg , hclose)
hdeg_1 <- which(data_1$degrees >= quantile(data_1$degrees , probs = seq(0, 1, 0.1))[10])
hclose_1 <- which(data_1$closeness >= quantile(data_1$closeness , probs = seq(0, 1, 0.1))[10])
hclose_1 <- row.names(data_1)[hclose_1]
hdeg_1 <- row.names(data_1)[hdeg_1]
intersect(hdeg_1 , hclose_1)
int <- intersect(hdeg , hclose)
int_1 <- intersect(hdeg_1 , hclose_1)
print(taxonomy[int , c("Rank6" , "Rank7")])
print(taxonomy[int_1 , c("Rank6" , "Rank7")])
tax <- taxonomy[int , c("Rank6" , "Rank7")]
tax_1 <- taxonomy[int_1 , c("Rank6" , "Rank7")]
tax <- cbind(tax , data)
tax <- cbind(tax , data[int , c("degrees" , "closeness")])
tax_1 <- cbind(tax , data[int_1 , c("degrees" , "closeness")])
tax_1 <- cbind(tax_1 , data_1[int_1 , c("degrees" , "closeness")])
tax_1
write.csv( tax_1 , "EVW_ks_brack_test_connected_otus.csv")
tax
write.csv( tax , "ks_brack_test_connected_otus.csv")
intersect(int , int_1)
